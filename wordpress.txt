|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ================================================================Плагины=============================================================================== -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

RARA Demo Import ---- загрузка демонстрационных файлов темы
Custom Post Type UI ---- создание разделов в админке
редирект ---- дополнение к форме (редирект)
Contact Form 7 ---- форма обратной связи
Show IDs by DraftPress ---- добавляет колонку id
YoastSEO ---- сео оптимизация и хлебные крошки
CMS Tree Page View ---- Добавляет древовидный список записей
Cyr----To----Lat ---- Преобразует не----латинские символы в ярлыках записей, страниц и рубрик в латинские.
Duplicate Page ---- Копирование страниц
Post Views Counter ---- Счетчик просмотров
Breadcrumb NavXT ---- Хлебные крошки для shema.org
Akismet Anti----spam ---- Защита от спама
Autoptimize ---- Он может агрегировать, минимизировать и кэшировать скрипты и стили
ReCaptcha for Contact Form 7 ---- защищает вас от спама
JivoChat Live Chat ---- "Универсальный канал связи специально для электронной коммерции JivoChat – это универсальный
бизнес----мессенджер"
EWWW Image Optimizer ---- Сжатие изображений


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ================================================================Части (компоненты)=============================================================================== -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

1) Если компонент не меняется на разных страницах - запихнуть в get_template_part
2) Если компонент видоизменяется на страницах (динамичный) то использовать do_shortcode


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================Вывод популярных меток========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

function wpb_tag_cloud()
{
$tags = get_tags();
$args = array(
'smallest' => 10,
'largest' => 22,
'unit' => 'px',
'number' => 10,
'format' => 'flat',
'separator' => " ",
'orderby' => 'count',
'order' => 'DESC',
'show_count' => 1,
'echo' => false
);

$tag_string = wp_generate_tag_cloud($tags, $args);

return $tag_string;
}
// Add a shortcode so that we can use it in widgets, posts, and pages
add_shortcode('wpb_popular_tags', 'wpb_tag_cloud');

// Enable shortcode execution in text widget
add_filter('widget_text', 'do_shortcode');


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ======================================================Вывод постов с пагинацией========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

<?php
$query = new WP_Query(
    [
        'post_type'      => 'post',
        'category_name' => 'blog',
        'paged' => get_query_var('paged') ?: 1 // страница пагинации

    ]
);
if (have_posts()) : while ($query->have_posts()) : $query->the_post(); ?>
<!-- Вывод постов, функции цикла: the_title() и т.д. -->

<!-- контент поста the_title(); -->

<?php endwhile;
else : ?>
Записей нет.
<?php endif; ?>
<!-- пагинация -->
<?php the_posts_pagination(); ?>


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ====================================Вывод счетчика просмотров для превью (Post Views Counter)========================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

<?php
$url = get_the_permalink($post);
$post_ID = url_to_postid($url);
// echo "ID поста = ". $post_ID;

echo do_shortcode('[post-views id =' . $post_ID . ']'); ?>


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ====================================Простой фильтр========================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Функция фильтра
function getSpan($tags)
{
return "<span>{$tags}</span>";
}
Добавление фильтра
add_filter('foo', 'getSpan');
Активация фильтра
$result = apply_filters('foo', $tag_string);


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ====================================Создание шорткода========================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

function название_функции()
{
<!-- тело функции -->

return "что-то";
}

// Добавляет шорткод
add_shortcode('псевдоним для шорткода', 'название_функции');

// Enable shortcode execution in text widget
add_filter('widget_text', 'do_shortcode');


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ====================================Создание шорткода c параметрами========================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

// ==================== шорткоды============================
function them_banner($atts)
{
$atts = shortcode_atts( array(
'id' => '',
), $atts );

// параметры по умолчанию
$my_posts = get_posts( array(
'include' => $atts["id"],
'post_type' => 'katalog',
) );


return $my_posts[0]->post_content;

}

// Добавляет шорткод
add_shortcode('banner', 'them_banner');

// Enable shortcode execution in text widget
// add_filter('widget_text', 'do_shortcode');

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ====================================Фильтр========================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================Создание полей через кастомайзер========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

function имя_функции($wp_customize) {

//секция
$wp_customize->add_section('имя_секции' , array(
'title' => 'Телефон',
'priority' => 99,
));

//Поле
$wp_customize->add_setting('имя_поля', array(
'capability' => 'edit_theme_options',
'default' => '',
'sanitize_callback' => 'sanitize_text_field', /*тип поля()*/
));

// настройки поля
$wp_customize->add_control('имя_поля', array(
'type' => 'input', /*тип поля()*/
'section' => 'имя_секции',
'label' => 'Телефон',
));
}

<!-- [для изображений] -->

$wp_customize->add_control(new WP_Customize_Image_Control($wp_customize, 'имя_поля', array(
'settings' => 'имя_поля',
'section' => 'имя_секции',
'label' => 'Иконка',
)));
<!-- [/для изображений] -->

add_action('customize_register', 'имя_функции');

<!-- для вывода в шаблоне -->
<? echo get_theme_mod('имя_поля');?>

<!-- типы данных -->
sanitize_text_field / input
sp_sanitize_number / Number
sp_sanitize_checkbox / checkbox
sanitize_textarea_field / textarea
esc_url_raw / 'settings' => 'test_img', / 'type' => 'image',
<!-- ======================================================= -->
Для строки - sanitize_text_field;
Для числа - sp_sanitize_number;
Для текста - sp_sanitize_textarea;
Для чекбокса - sp_sanitize_checkbox;
Для изображения - esc_url_raw;

Для вывода значений настройки используется функция get_theme_mod().

Пример:

echo get_theme_mod('test_str');

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================Создание виджетов========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

<!-- регистрация нового поля -->
function remont_custom_widgets_init() {
register_sidebar(
array(
'name' => esc_html__( 'Footer' ),
'id' => 'Footer',
'description' => esc_html__( 'Add widgets here.', 'remont' ),
'before_widget' => '<section id="%1$s" class="widget %2$s">',
    'after_widget' => '</section>',
'before_title' => '<h2 class="widget-title">',
    'after_title' => '</h2>',
)
);
}
add_action( 'widgets_init', 'remont_custom_widgets_init' );

<!-- вывод в нужном месте -->
<?php dynamic_sidebar( 'Footer' ); ?>

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================Пример получения постов в таксономии в определенной категории========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

<!-- =================Через get_posts======================-->

$posts = get_posts( array(
'tax_query' => array(
array(
'taxonomy' => 'nastrojki',
'field' => 'id',
'terms' => array( $atts["id"] ),
)
),
'post_type' => 'katalog',
"posts_per_page" => -1,

) );




$item ='';
foreach( $posts as $pst ) {
$pst->post_title
}

<!-- =================Через WP_Query======================-->
<?php
$query = new WP_Query( array(
            'tax_query' => array(
                array(
                    'taxonomy' => 'otzyv', //слаг таксономии
                    'field'    => 'id',
                    'terms'    => '36'		//id категории
                )
            ),
            	'post_type' => 'otzyvy',	//Тип записи, который привязан к таксономии
            	"posts_per_page" => -1,
            	"orderby" => "menu_order",
            	'order'       => 'ASC',
        ) ); 
?>
<?php
 if(!empty($query)):
    while ( $query->have_posts() ):
    $query->the_post();
?>


    <h3>
        <?php the_title();?>
    </h3>

<?php 
    endwhile;
    endif;
    wp_reset_postdata();
?>


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================изменение классов у пунктов меню ========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

add_filter( 'nav_menu_css_class', 'change_menu', 10, 4 );

function change_menu( $classes, $item, $args, $depth ) {
	if ( 'topline_menu' === $args->theme_location || 'header_menu' === $args->theme_location) {
		$classes = [ 'nav-item' ];
	} else {
		$classes = [];
	}

	return $classes;
}


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================изменение классов у submenu ========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

add_filter( 'nav_menu_submenu_css_class', 'change_wp_nav_menu', 10, 3 );

function change_wp_nav_menu( $classes, $args, $depth ) {
	if ('mob_menu' === $args->theme_location) {
		foreach ( $classes as $key => $class ) {
			if ( $class == 'sub-menu' ) {
				$classes[ $key ] = 'spoiler-content-menu';
			}
		}
	}


	return $classes;
}


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================Фильтр для contact form 7 (убирает p) ========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

add_filter('wpcf7_autop_or_not', '__return_false');

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================Добавление полей для формы заказа в woocomerce ========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

<!-- -------------добавление полей--------- -->
---------------------------------------------------------------------------------------------------------
Хук	Расположение
woocommerce_before_checkout_billing_form	Перед полями платёжного адреса.
woocommerce_after_checkout_billing_form	После полей платёжного адреса
woocommerce_before_checkout_registration_form	Перед формы регистрации.
woocommerce_after_checkout_registration_form	После формы регистрации.
woocommerce_before_checkout_shipping_form	Перед полями адреса доставки.
woocommerce_after_checkout_shipping_form	После полей адреса доставки.
woocommerce_before_order_notes	Перед полем примечания к заказу.
woocommerce_after_order_notes	После поля примечания к заказу.
-------------------------------------------------------------------------------------------------------

add_action( 'woocommerce_before_order_notes', 'addDelivery' );
 
function addDelivery($checkout) {
	// выводим поле функцией woocommerce_form_field()
	woocommerce_form_field( 
		'billing_contactmethod', 
		array(
			'type'          => 'select', // text, textarea, select, radio, checkbox, password
			'required'	=> false, // по сути только добавляет значок "*" и всё
			'class'         => array( 'true-field', 'form-row-wide' ), // массив классов поля
			'label'         => 'Выберите способ получения',
			'label_class'   => 'true-label', // класс лейбла
			'options'	=> array( // options for  or 
                ''		=> 'Выберите', // пустое значение
				'Доставка'	=> 'Доставка', // 'значение' => 'заголовок'
				'Самовывоз'	=> 'Самовывоз'
			)
		),
		$checkout->get_value( 'contactmethod' )
	);
    woocommerce_form_field( 
		'billing_contactmethod_2', 
		array(
			'type'          => 'text', // text, textarea, select, radio, checkbox, password
			'required'	=> false, // по сути только добавляет значок "*" и всё
			'class'         => array( 'true-field', 'form-row-wide' ), // массив классов поля
			'label'         => 'Укажите адрес',
			'label_class'   => 'true-label', // класс лейбла
			'options'	=> array( // options for  or 

			)
		),
		$checkout->get_value( 'contactmethod' )
	);
}

  <!-- ------------------сохранение полей -->

  add_action( 'woocommerce_checkout_update_order_meta', 'true_save_field', 25 );
 
function true_save_field( $order_id ){
 
	if( ! empty( $_POST[ 'billing_contactmethod' ] ) ) {
		update_post_meta( $order_id, 'billing_contactmethod', sanitize_text_field( $_POST[ 'billing_contactmethod' ] ) );
	}
    if(! empty( $_POST[ 'billing_contactmethod' ] ) ) {
        update_post_meta( $order_id, 'billing_contactmethod_2', sanitize_text_field( $_POST[ 'billing_contactmethod_2' ] ) );
    }
 
}

 <!-- ------------------добавление этого поля в заказ в админку -->

 ------------------------------------------------------------------------------
 woocommerce_admin_order_data_after_order_details – если вы хотите добавить информацию в первую колонку, под полем «Клиент».
woocommerce_admin_order_data_after_billing_address – под платёжным адресом.
woocommerce_admin_order_data_after_shipping_address – под адресом доставки.
-----------------------------------------------------------------------------------

add_action( 'woocommerce_admin_order_data_after_shipping_address', 'custom_field_display_admin_order_meta', 10, 1 );

function custom_field_display_admin_order_meta($order){
    echo '<p><strong>'.__('Способ получения').':</strong> <br>' . get_post_meta( $order->id, 'billing_contactmethod', true ) . '</p>';
    echo '<p><strong>'.__('Адрес').':</strong> <br>' . get_post_meta( $order->id, 'billing_contactmethod_2', true ) . '</p>';
}

 <!-- ------------------добавление этого поля в сообщение email -->

add_filter( 'woocommerce_get_order_item_totals', 'truemisha_field_in_email', 25, 2 );
 
function truemisha_field_in_email( $rows, $order ) {
 
 	// удалите это условие, если хотите добавить значение поля и на страницу "Заказ принят"
	if( is_order_received_page() ) {
		return $rows;
	}
 
	$rows[ 'billing_contactmethod' ] = array(
		'label' => 'Предпочитаемый метод связи',
		'value' => get_post_meta( $order->get_id(), 'billing_contactmethod', true )
	);
 
	return $rows;
 
}


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================Замена текста кнопки добавить в корзину в woocomerce ========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

woocommerce_product_add_to_cart_text

woocommerce/includes/class-wc-product-simple.php



|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ==========================================================Добавление плагина========================================================================= -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

1) Создать каталог по адресу /wp-content/plugins/name.php
2) Добавить шаблон в файл
/*
* Plugin Name: Шорткоды
 * Description: Шорткоды темы
 * Version: 1.1.1
 * Author: Дмитрий земцов
 * License: GPLv2 or later
 * License URI: https://www.gnu.org/licenses/gpl-2.0.html
 *
 * Text Domain: truemisha
 * Domain Path: /languages
 *
 * Network: true
*/
2) Активировать в админке


// ================================= Убирает префикс у таксономии =========================
// remont заменить на свою таксономию

add_filter( 'post_type_link', 'remove_post_type_slug', 10, 2 );
add_action( 'pre_get_posts', 'add_post_type_to_get_posts_request' );

// Удаляем префикс с именем типа записи из URL
function remove_post_type_slug( $post_link, $post ){

	if( $post->post_type === 'remont' ){
		return str_replace( "/$post->post_type/", '/', $post_link );
	}

	return $post_link;
}

// Добавляем тип записи в запрос
function add_post_type_to_get_posts_request( $query ){

	if( is_admin() || ! $query->is_main_query() )
		return; // не основной запрос

	// не запрос с name параметром (как у постоянной страницы)
	if( ! isset($query->query['page']) || empty($query->query['name']) || count($query->query) != 2 )
		return;

	$query->set('post_type', array('post', 'page', 'remont') ); // 'team' added
}


<<<<<<< Updated upstream
// ================================= Получить родительскую категорию таксономии по записи =========================
$cat_obj = get_the_terms($item->ID, 'kategoriya-komandy');


//=============================== Замена через буфер ==========================================

add_action('template_redirect', 'set_replace_content', 10, 2);

function set_replace_content()
{
    if (is_product()) {
        ob_start(function (
            $buffer
        ) {
            $buffer = str_ireplace(['<strong>', '</strong>', '<b>', '</b>'], '', $buffer);
            return $buffer;
        });
    }
}




=======
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
<!-------- ================================================================Интеграция с чат-ботом телеграм=============================================================================== -------->
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

add_action( 'wpcf7_mail_sent', 'your_wpcf7_mail_sent_function' );
	function your_wpcf7_mail_sent_function($contact_form){
		//результат
		$arResult = [];
		//нужные поля из cf7
		$arAssoc = [
			'text-48' => 'Имя клиента',
			'your-name' => 'Имя клиента',
			'your-phone' => 'Телефон',
			'tel-340' => 'Телефон',
			'your-email' => 'Email',
			'date-665' => 'Дата для записи',
			'menu-370' => 'Название услуги',
			'usluga' => 'Название услуги',
			'menu-372' => 'К доктору',
			'text-69' => 'К доктору',
			
		];
		//Заголовок формы
		$title = $contact_form->title;
		$posted_data = $contact_form->posted_data;

		$submission = WPCF7_Submission::get_instance();
		$posted_data = $submission->get_posted_data();
				
		// telegram integration 
		//токен из телеграм
		$token = '8137445473:AAFY1fly-l9BVK-zMtfYwfmxH4JhfF36G6c';
		//id чата куда будет приходить письма
		$chat_id = '-4759692378';	
		//текст письма
		$txt .= "{$title} %0A";
		//если в cf7 есть поля, которые мы указали вначале, то добавлять поля эти поля и значения в массив
		foreach($posted_data as $key=>$val){
			
			if(array_key_exists($key, $arAssoc) && $val){
				
				$arResult[$arAssoc[$key]] = $val;
			}
		}
		// добавить в текс все поля из резултатирующего массива
		foreach($arResult as $k => $v){
			$txt .= "<b>".$k.": </b> " . $v . "%0A";
		}
		//если текст не пуст отправить его в телеграм						
		if(isset($txt) && $txt){
			$txt = str_ireplace(['<br />','<br/>','<br>'], '', $txt);
			$sendToTelegram = fopen("https://api.telegram.org/bot{$token}/sendMessage?chat_id={$chat_id}&parse_mode=html&text={$txt}","r");
		}
	}
>>>>>>> Stashed changes
